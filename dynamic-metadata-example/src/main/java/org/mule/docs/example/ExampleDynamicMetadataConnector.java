/**
 * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 **/
        
/**
 * This file was automatically generated by the Mule Development Kit
 */
package org.mule.docs.example;

import org.mule.api.annotations.ConnectionStrategy;
import org.mule.api.annotations.Connector;
import org.mule.api.annotations.MetaDataScope;
import org.mule.api.annotations.Processor;
import org.mule.api.annotations.param.Default;
import org.mule.api.annotations.param.MetaDataKeyParam;
import org.mule.docs.example.connection.DummyConnectionStrategy;
import org.mule.docs.example.metadata.LibraryMetadataCategory;

import java.util.Map;

/**
 * Example Connector for MetaData
 *
 * @author MuleSoft, Inc.
 */
@Connector(name = "example", schemaVersion = "1.0-SNAPSHOT", friendlyName = "Dynamic Metadata Example")
@MetaDataScope(LibraryMetadataCategory.class)
public class ExampleDynamicMetadataConnector {

    @ConnectionStrategy
    DummyConnectionStrategy connectionStrategy;

    /**
     * Creates an entity on the book library service
     *
     * {@sample.xml ../../../doc/example-connector.xml.sample example:create}
     *
     * @param entityType type of the entity
     * @param entityData data of the entity
     * @return the entity created
     */
    @Processor
    public Map<String,Object> create(@MetaDataKeyParam String entityType, @Default("#[payload]") Map<String,Object> entityData) {

        if ("Book_id".equals(entityType)) {
            return createBook(entityData);
        }

        if ("Author_id".equals(entityType)) {
            return createAuthor(entityData);
        }

        throw new RuntimeException("Entity not recognized");

    }

    private Map<String, Object> createAuthor(Map<String, Object> entityData) {
        //CODE TO CREATE BOOK GOES HERE
        return entityData;
    }

    private Map<String, Object> createBook(Map<String, Object> entityData) {
        //CODE TO CREATE AUTHOR GOES HERE
        return entityData;
    }

    public DummyConnectionStrategy getConnectionStrategy() {
        return connectionStrategy;
    }

    public void setConnectionStrategy(DummyConnectionStrategy connectionStrategy) {
        this.connectionStrategy = connectionStrategy;
    }

}
