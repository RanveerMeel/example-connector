/**
 * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 **/
        
/**
 * This file was automatically generated by the Mule Development Kit
 */
package org.mule.docs.example;

import org.mule.api.annotations.ConnectionStrategy;
import org.mule.api.annotations.Connector;
import org.mule.api.annotations.MetaDataScope;
import org.mule.api.annotations.Processor;
import org.mule.api.annotations.param.Default;
import org.mule.api.annotations.param.MetaDataKeyParam;
import org.mule.api.annotations.param.MetaDataKeyParamAffectsType;
import org.mule.docs.example.connection.DummyConnectionStrategy;
import org.mule.docs.example.metadata.LibraryMetadataCategory;
import org.mule.docs.example.model.Author;
import org.mule.docs.example.model.Book;

/**
 * Example Connector for MetaData
 *
 * @author MuleSoft, Inc.
 */
@Connector(name="example", friendlyName = "Example", schemaVersion="1.0-SNAPSHOT")
@MetaDataScope(LibraryMetadataCategory.class)
public class ExampleStaticMetadataConnector {

    @ConnectionStrategy
    DummyConnectionStrategy connectionStrategy;
    /**
     * Creates an entity on the book library service
     *
     * {@sample.xml ../../../doc/example-connector.xml.sample example:create}
     *
     * @param entityType type of the entity
     * @param entityData data of the entity
     * @return the entity created
     */
    @Processor
    public Object create(@MetaDataKeyParam(affects = MetaDataKeyParamAffectsType.BOTH) String entityType, @Default("#[payload]") Object entityData) {

        if (entityData instanceof Book) {
            return createBook((Book) entityData);
        }

        if (entityData instanceof Author) {
            return createAuthor((Author) entityData);
        }

        throw new RuntimeException("Entity not recognized");

    }

    private Object createAuthor(Author entityData) {
        //CODE FOR CREATING NEW AUTHOR IN THE SERVICE GOES HERE
        return null;
    }

    private Object createBook(Book entityData) {
        //CODE FOR CREATING A NEW BOOK IN THE SERVICE GOES HERE
        return null;
    }


    public DummyConnectionStrategy getConnectionStrategy() {
        return connectionStrategy;
    }

    public void setConnectionStrategy(DummyConnectionStrategy connectionStrategy) {
        this.connectionStrategy = connectionStrategy;
    }

}
